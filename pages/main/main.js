"use strict";
var PAGE_SIZE = 5;
Page({
    onShareAppMessage: function () {
        return {
            title: "听个戏吧",
            path: "pages/main"
        };
    },
    recorderManager: wx.getRecorderManager(),
    isRecording: false,
    recordStartTime: new Date(),
    currentPageIndex: 0,
    data: {
        currentOperaIndex: 0,
        operas: [],
    },
    onLoad: function () {
        this.requestOperas({ pageIndex: this.currentPageIndex });
        this.initRecorders();
    },
    requestOperas: function (findOperasDTO) {
        var _this = this;
        wx.request({
            url: 'http://10.8.96.196:3000/operas',
            data: {
                pageIndex: findOperasDTO.pageIndex,
                pageSize: PAGE_SIZE
            },
            success: function (res) {
                var newOperas = res.data.map(function (dto) { return ({
                    id: dto.id,
                    title: dto.title,
                    link: dto.link,
                    context: wx.createVideoContext("opera-" + dto.id)
                }); });
                var operas = _this.data.operas.concat(newOperas);
                _this.setData({ operas: operas }, function () {
                    _this.data.operas[0].context.play();
                });
            }
        });
    },
    switchToNextVideo: function (nextIndex) {
        var _this = this;
        var _a = this.data, currentOperaIndex = _a.currentOperaIndex, operas = _a.operas;
        var currentPageIndex = this.currentPageIndex;
        var prevIndex = currentOperaIndex;
        operas[prevIndex].context.seek(0);
        operas[prevIndex].context.pause();
        this.setData({
            currentOperaIndex: nextIndex
        }, function () {
            operas[nextIndex].context.play();
            var threshold = operas.length - Math.ceil(PAGE_SIZE / 2);
            if (nextIndex === threshold) {
                var nextPageIndex = currentPageIndex + 1;
                _this.currentPageIndex = nextPageIndex;
                _this.requestOperas({ pageIndex: nextPageIndex });
            }
        });
    },
    onSwiperChange: function (e) {
        this.switchToNextVideo(e.detail.current);
    },
    onVideoEnded: function () {
        var _a = this.data, currentOperaIndex = _a.currentOperaIndex, operas = _a.operas;
        if (currentOperaIndex === operas.length - 1) {
            return;
        }
        this.switchToNextVideo(this.data.currentOperaIndex + 1);
    },
    initRecorders: function () {
        var recorderManager = this.recorderManager;
        recorderManager.onStop(function (res) {
            console.log(res);
            wx.uploadFile({
                url: "https://xxxx",
                filePath: res.tempFilePath,
                name: "file",
                header: {
                    "content-type": "multipart/form-data"
                },
                success: function (res) {
                    console.log(res);
                },
                fail: function () {
                    console.log("语音识别失败");
                }
            });
        });
    },
    startRecord: function () {
        var _a = this, recorderManager = _a.recorderManager, isRecording = _a.isRecording;
        if (isRecording) {
            return;
        }
        console.log("record start");
        this.isRecording = true;
        this.recordStartTime = new Date();
        var options = {
            duration: 10000,
            sampleRate: 16000,
            numberOfChannels: 1,
            encodeBitRate: 64000,
            format: 'PCM',
            frameSize: 50
        };
        recorderManager.start(options);
    },
    stopRecord: function () {
        var _a = this, recorderManager = _a.recorderManager, isRecording = _a.isRecording, recordStartTime = _a.recordStartTime;
        if (!isRecording) {
            return;
        }
        var duration = new Date().getTime() - recordStartTime.getTime();
        if (duration < 1000) {
            console.log("record too short ");
            return;
        }
        console.log("record end ", duration);
        this.isRecording = false;
        recorderManager.stop();
    }
});
//# sourceMappingURL=data:application/json;base64,